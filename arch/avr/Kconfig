menu "AVR system configuration"

config ARCH_EXT_MEM
	bool

config EXT_MEM
	int "External memory"
	help
	  If you connected external memory to your AVR core,
	  enter the amount of bytes you connected here.

config STACK_SIZE
	int "Stack size"
	help
	  Enter the amount of bytes which should be
	  reserved for the stack by default. This value
	  will be the size of the main thread (if scheduling
	  is enabled) and it will be used as default for
	  other threads if no stack size is given when a new
	  thread is created.

config IDLE_STACK_SIZE
	int "Idle stack size"
	depends on SCHED
	default 256
	help
	  Set the size of the idle stack. The idle stack
	  takes a seperate number from the main stack, due
	  to the fact that the idle stack is much smaller.

config IRQ_STACK_SIZE
	int "Threaded IRQ stack size"
	depends on IRQ_THREAD
	default 768
	help
	  Set the size for the stacks of threaded IRQ's. Please
	  note that the stacks of threaded IRQ's are generally
	  a tad bigger than normal threads.

config FCPU
	int "CPU frequency"
	default 8000000
	help
	  Enter the frequency your CPU will be running on here.

config SIMUL_AVR
	bool "Enable SIMULAVR support"
	select VFS
	help
	  By saying 'Y' here you will enable support for SIMUALAVR;
	  an AVR emulator. This will also enable two extra I/O
	  registers for input and output. All in- and output from the
	  std C library will be directed from and to these to I/O ports.
	  If unsure, say 'N' here.

choice
	prompt "STDIO output device"
	depends on CRT
	help
	  Select which device driver should be used to drive
	  the STDIO library. By default the USART is selected.

config STDIO_SIMUL_AVR
	bool "STDIO simulavr driver"
	depends on SIMUL_AVR
	help
	  Select if you want to use the special output registers
	  of simulavr to drive the STDIO library.

config STDIO_USART
	bool "STDIO USART driver"
	depends on USART
	help
	  Select if you want to use the USART registers
	  to drive the STDIO library. If unsure say 'y' here.

endchoice

config LIBFLT
	tristate "Floating point library"
	depends on m
	default m
	help
	  By saying 'm' here you enable the floating point
	  built-in library. You should only say 'm' here if
	  gcc is not build with soft-fp (which isn't the case
	  by default). If you unsure say 'm' here.

choice
	prompt "AVR core selection"
	help
	  Select the AVR architecture to build for.

config ATMEGA328
	bool "ATmega 328(p)"
	select ARCH_CLEAR_BIT
	select ARCH_TNC
	select ARCH_TNS
	select ARCH_SET_BIT
	select ARCH_TEST_BIT
	select ARCH_HRTIMER
	select HARVARD
	help
	  Select if you are building for the Atmel ATmega328 or ATmega328p
	  AVR core.

config ATMEGA1280
	bool "ATmega 1280"
	select ARCH_CLEAR_BIT
	select ARCH_TNC
	select ARCH_TNS
	select ARCH_SET_BIT
	select ARCH_TEST_BIT
	select ARCH_HRTIMER
	select ARCH_EXT_MEM
	select HARVARD
	help
	  Select if you are building for the Atmel ATmega328 or ATmega1280
	  AVR core.

config ATMEGA2560
	bool "ATmega 2560"
	select ARCH_CLEAR_BIT
	select ARCH_TNC
	select ARCH_TNS
	select ARCH_SET_BIT
	select ARCH_TEST_BIT
	select ARCH_HRTIMER
	select ARCH_EXT_MEM
	select HARVARD
	help
	  Select if you are building for the Atmel ATmega328 or ATmega2560
	  AVR core.
endchoice

config PICO_POWER
	bool "Pico power"
	depends on ATMEGA328
	help
	  Select if you are building for the pico power variant
	  of your CPU. Do not select this option of you are not
	  planning to run on a pico power CPU.

config ARCH_POWER_SAVE
	bool "Power saving"
	default y
	help
	  Selecting this options enables the use of the power saving
	  module for AVR MCU's. If you are unsure, say 'y' here.
endmenu

source "kernel/Kconfig"
source "drivers/Kconfig"
source "mm/Kconfig"
source "lib/Kconfig"
source "fs/Kconfig"

