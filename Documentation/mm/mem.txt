/* ================ Memory management ================ */

/**
 * @defgroup mm Memory management
 * @ingroup kernel
 * @brief Dynamic memory management.
 *
 * Dynamic memory allocations are made from the heap. The heap is a global 
 * resource containing all of the free memory in the system. The heap is 
 * handled in data structure of unused blocks of memory, the so called 
 * free-list.
 */

/**
 * @defgroup bf Best fit allocator
 * @ingroup mm
 * @brief Best fit memory allocation algorithm.
 * 
 * The best fit allocator is a variant to the first-fit algorithm. It is
 * slightly slower, but spills less memory and therefore reduces the amount of
 * fragmentation. It maintains a list of available memory and removes an entry 
 * whenever it gets allocated. However, in contrast to first-fit, best-fit will
 * search the entire free-list to find the best fitting block for the
 * allocation.
 *
 * If a memeory region gets free'd up, the region is added back into the list
 * of available memory.
 */

/**
 * @defgroup ff First fit allocator
 * @ingroup mm
 * @brief First fit memory allocation algorithm.
 * 
 * The first fit allocator is the simplest and fastest flat memory algorithm.
 * This algorithm will allocate the first region it finds that is big enough
 * to contain an allocation. If the region is too big, it will be split up.
 * A down side of this algorithm is the potential to cause fragmentation.
 */

/**
 * @defgroup wf Worst fit allocator
 * @ingroup mm
 * @brief Worst fit memory allocation algorithm.
 *
 * The worst fit allocation algorithm looks to reduce the amount of
 * fragmentation by attempting to fit allocations in the largest available
 * blocks. Doing so reduces the amount of very small heap blocks.
 */

