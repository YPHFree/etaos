/**
 * @defgroup python Python STL
 * @brief Python standard library documentation.
 */

/**
 * @defgroup python-avr Python AVR
 * @ingroup python
 * @brief Python AVR module.
 */

/**
 * @defgroup python-builtin Builtin functions
 * @ingroup python
 * @brief Python built-in functions.
 * @note The user does not have to import this module manually.
 */

/**
 * @defgroup python-math Mathematical functions
 * @ingroup python
 * @brief Math package which provides mathematical functions defined by
 *        the C standard.
 *
 * All functions accept either floating point or integer numbers as input. If
 * an integer number is given as input, the package will convert it to a
 * floating point as required.
 */

/**
 * @defgroup python-cpu CPU
 * @ingroup python
 * @brief Python CPU module.
 *
 * This module brings support for GPIO and analog port operations.
 */

/**
 * @defgroup python-device Device
 * @ingroup python
 * @brief Python device module.
 *
 * This module provides an API to the device file system.
 */

/**
 * @defgroup python-dict Dictionaries
 * @ingroup python
 * @brief Python dictionary module.
 */

/**
 * @defgroup python-eeprom EEPROM
 * @ingroup python
 * @brief Python EEPROM drivers.
 *
 * ### Usage
 *
@code{.py}
read_example(eeprom, addr, num):
	return eeprom.read(addr, num)

example_write(eeprom, addr, ary):
	eeprom.write(addr, ary, len(ary))

main():
	ee = EEPROM("24C02")
	write_example(ee, 0x40, [20, 0x10, 40, 100])
	data = read_example(ee, 0x40, 4)
	for x in data:
		print x
@endcode
 */

/**
 * @defgroup python-sram SRAM
 * @ingroup python
 * @brief Python SRAM device driver.
 *
 * ### Usage
 *
@code{.py}
read_example(addr):
	ram = SRAM("23K256")
	return ram.read_float(addr)

write_example(addr, flt):
	ram = SRAM("23K256")
	ram.write_float(addr, flt)
@endcode
 */

/**
 * @defgroup python-list Lists
 * @ingroup python
 * @brief List API.
 */

/**
 * @defgroup python-tmp35 TMP35 driver
 * @ingroup python
 * @brief TMP35 temperature driver.
 */

/**
 * @defgroup python-lm36 LM36 driver
 * @ingroup python
 * @brief LM36 temperature driver.
 */

/**
 * @defgroup python-string String API
 * @ingroup python
 * @brief String API.
 */

/**
 * @defgroup python-time Time API
 * @ingroup python
 * @brief Python time functions / classes.
 */

/**
 * @defgroup python-sys System API
 * @ingroup python
 * @brief Python system API.
 *
 * Usage:
@code{main.py}
import sys
@endcode
 */

/**
 * @defgroup python-func Function support
 * @ingroup python
 * @brief Function (pointer) support.
 *
 * The func module implements function pointer / function object support.
 */
